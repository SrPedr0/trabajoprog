/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package parctica_prog;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

/**
 *
 * @author pedro
 */
public class FitxerIN {

    //ATRIBUTS
    private FileReader fr;
    private BufferedReader br;
    private File f;
    private Character car;
    private Paraula nomf;
    private int lin = 1;
    private int col = 1;
    public int comptPal;

    //CONSTRUCTOR
    public FitxerIN(Paraula p) throws FileNotFoundException, IOException {
        nomf = p;
        fr = new FileReader(nomf.toString());
        br = new BufferedReader(fr);
        br.mark(99999999);
    }

    //METODES
    //Llegir 1 caracter d'arxiu
    public Character llegirc() throws IOException {

        Character c = null;
        int valor;
        valor = br.read();
        col++;
        if (valor >= 0) {
            c = (char) valor;
            if (valor == 10) {
                lin++;
                col =0;
            }
        }
        return c;
    }

    //Botar espais i mes de l'arxiu
    public void BotarBlancsIMES() throws IOException {
        car = llegirc();
        while (car != null && car.charValue() < 33) {
            car = llegirc();
        }

    }

    //Llegir paraula d'arxiu
    public Paraula llegirP() throws IOException {

        Paraula aux = new Paraula();
        BotarBlancsIMES();
        while (car != null && car.charValue() > 32) {
            aux.afeigir(car);
            car = llegirc();
        }
        
        return aux;
    }
    public Text llegirT() throws IOException{
        Text aux = new Text();
        car = llegirc();
        while (car != null){
            aux.afeigir(car);
            car = llegirc();
        }
        return aux;   
    }
 
  
    

    //Caracters totals del fitxer
    public int CaractersT() throws IOException {
        
        int compt = 0;
        car = llegirc();
        while (car != null) {
            if (car > 32) {
                compt++;
            }
            car = llegirc();
        }
        br.reset();
        return compt;
    }

    //Paraules totals del fitxer
    public int ParaulesT() throws IOException {
        lin = 1;
        Paraula aux = new Paraula();
        comptPal = 0;
        aux = llegirP();
        while (!aux.buida()) {

            comptPal++;

            aux = llegirP();
        }
        return comptPal;
    }

       
    


    //Comptador de les lletres mes repetides
    public int[] nombreAparicionsC() throws IOException {
        int abecedario[] = new int[27];
        for(int i=0;i<27;i++){
            abecedario[i] = 0;
        }
        car = llegirc();
        while (car != null) {
            if (car == 'a' || car == 'A') {
                abecedario[0]++;
            } else if (car == 'b' || car == 'B') {
                abecedario[1]++;
            }else if(car == 'c'|| car == 'C'){
                abecedario[2]++;
            }else if(car == 'd'|| car == 'D'){
                abecedario[3]++;  
            }else if(car == 'e'|| car == 'E'){
                abecedario[4]++;
            }else if(car =='f'|| car == 'F'){
                abecedario[5]++;
            }else if(car == 'g' || car =='G'){
                abecedario[6]++;
            }else if(car == 'h' || car =='H'){
                abecedario[7]++;
            }else if(car == 'i' || car =='I'){
                abecedario[8]++;
            }else if(car == 'j' || car =='J'){
                abecedario[9]++;
            }else if(car == 'k' || car =='K'){
                abecedario[10]++;
            }else if(car == 'l' || car =='L'){
                abecedario[11]++;
            }else if(car == 'm' || car =='M'){
                abecedario[12]++;
            }else if(car == 'n' || car =='N'){
                abecedario[13]++;
            }else if(car == 'ñ' || car =='Ñ'){
                abecedario[14]++;
            }else if(car == 'o' || car =='O'){
                abecedario[15]++;
            }else if(car == 'p' || car =='P'){
                abecedario[16]++;
            }else if(car == 'q' || car =='Q'){
                abecedario[17]++;
            }else if(car == 'r' || car =='R'){
                abecedario[18]++;
            }else if(car == 's' || car =='S'){
                abecedario[19]++;
            }else if(car == 't' || car =='T'){
                abecedario[20]++;
            }else if(car == 'u' || car =='U'){
                abecedario[21]++;
            }else if(car == 'v' || car =='V'){
                abecedario[22]++;
            }else if(car == 'w' || car =='W'){
                abecedario[23]++;
            }else if(car == 'x' || car =='X'){
                abecedario[24]++;
            }else if(car == 'y' || car =='Y'){
                abecedario[25]++;
            }else if(car == 'z' || car =='Z'){
                abecedario[26]++;
            }
            car = llegirc();
    }
        
        
        
        return abecedario;
    }
    //Palabra mas repetida
    public int MesRepetidaPal(int a[], int b) throws IOException{
        BibliotecaParaules biblio = new BibliotecaParaules();
        int ParaulesT = b;
        int paraules[]= new int[a.length];
        paraules = a;
        int i=0;
        for(int j=1; j<a.length; j++){
         
            if(paraules[i]<paraules[j]){
                i = j;
            }
        }
        br.reset();
        return i;
    }
    

    
    //lletra mes repetida
    public int MesRepetidaLl(int a[]) throws IOException{
        int abecedario[]=new int[27];
        abecedario = a;
        int i=0;
        for(int j=1; j<27; j++){
         
            if(abecedario[i]<abecedario[j]){
                i = j;
            }
        }
        
        
        return i;        
    }
    //Columna de la paraula
    public int colPal(Paraula a){
        Paraula aux = a;
        int colPal;
        colPal = col - aux.ind;
        return colPal;
    }
    //reset de l'arxiu
    public void resetA() throws IOException{
        br.reset();
    }
    //setLin
    public void setLin(int a){
        lin = a;
    }
    //setCol
    public void setCol(int a){
        col = a;
    }
    //getLin
    public int getLin() {
        return lin;
    }
    public long getTamañoAr(){
        long tam = f.length();
        return tam;
    }
    //Tancar fitxer
    public void close() throws IOException {
        fr.close();
        br.close();
    }

}

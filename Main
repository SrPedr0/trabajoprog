/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practicaproggui;

import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import profesoratprimer.FinestraDMI;
import profesoratprimer.FinestraDMIInterf;
import profesoratprimer.RatoliDMI;

/**
 *
 * @author pedro
 */
public class PracticaProgGUI implements FinestraDMIInterf {

    private FinestraDMI finestra;
    private char text[];
    private char paraulaCerca[];
    private Paraula Fitxer;
    private LT tec = new LT();
    private FitxerIN fitxIN;
    private Paraula opcio = null;
    private Paraula posiblesOpcions[];
    private int ParaulesT;
    private int col = 1;
    private int llavor = 0;
    private int ParaulesMAX = 500;
    private Paraula cod;

    private void inicio() throws IOException {

        finestra = FinestraDMI.crear(this, 1080, 720);
        finestra.posarDibuix(0, 0, "imatges/titulo.png", 1080, 720);
        Fitxer = AnalisisNomFitx();

        fitxIN = new FitxerIN(Fitxer);
        ParaulesT = fitxIN.ParaulesT();
        PosOPC();
        COD();
        System.out.println(Fitxer);
        System.out.println(cod);
        System.out.println(Fitxer.codificar(cod));
        if (Fitxer.codificar(cod)) {
            do {
                System.out.println("Has introduit un fitxer codificat,");
                finestra.posarDibuix(0, 0, "imatges/pantalla2.png", 1080, 720);
                EstablirLLavor();
                decodFitx();
                finestra.posarDibuix(0, 0, "imatges/pantalla2.png", 1080, 720);
                finestra.posarText(855, 476, Fitxer.toString(), 1, 138, 122, 101);
                finestra.posarText(931, 453, ParaulesMAX + "", 1, 138, 122, 101);
                finestra.posarText(968, 498, fitxIN.CaractersT() + "", 1, 138, 122, 101);
                finestra.posarText(965, 522, fitxIN.ParaulesT() + "", 1, 138, 122, 101);
                finestra.posarText(945, 545, fitxIN.getLin() + "", 1, 138, 122, 101);
                finestra.posarText(866, 569, llavor + "", 1, 138, 122, 101);
                Switch(AnalisisOpcio());

            } while (!opcio.iguals(posiblesOpcions[9]));
        } else {
            finestra.posarDibuix(0, 0, "imatges/pantalla2.png", 1080, 720);
            finestra.posarText(855, 476, Fitxer.toString(), 1, 138, 122, 101);
            finestra.posarText(931, 453, ParaulesMAX + "", 1, 138, 122, 101);
            finestra.posarText(968, 498, fitxIN.CaractersT() + "", 1, 138, 122, 101);
            finestra.posarText(965, 522, fitxIN.ParaulesT() + "", 1, 138, 122, 101);
            finestra.posarText(945, 545, fitxIN.getLin() + "", 1, 138, 122, 101);
            finestra.posarText(866, 569, llavor + "", 1, 138, 122, 101);
            Switch(AnalisisOpcio());
            do {
                SwitchCod(AnalisisOpcio());
            } while (!opcio.iguals(posiblesOpcions[9]));
        }
    }

    /*
    public Paraula MenuPrincipal() throws IOException {
        System.out.println("\n\n\n\n\n\n\n\n\n\n\n\n");
        System.out.println("***********************************************************************************");
        System.out.println("*                           MENÚ PRINCIPAL DEL PROGRAMA                           *");
        System.out.println("***********************************************************************************");
        System.out.println("* Nom fitxer: " + Fitxer.toString() + "                          Caracters totals: " + fitxIN.CaractersT());
        
        System.out.println("*                                                       Paraules totals: " + ParaulesT);
        System.out.println("*                                                    Línies totals: " + fitxIN.getLin());
        System.out.println("Quina opció elegiu?");
        System.out.println("1 Lletra més repetida i nombre d'aparicions");
        System.out.println("2 Nombre d'aparicions de cada caràcter");
        System.out.println("3 Paraula més repetida i nombre d'aparicions");
        System.out.println("4 Cercar paraula");
        System.out.println("5 Cercar text");
        System.out.println("6 Paraules repetides");
        System.out.println("7 Codificar");
        System.out.println("8 Establir llavor");
        System.out.println("9 Establir tope de paraules");
        System.out.println("s Sortir");
        System.out.print("Introdueix la teva opció: ");
        opcio = AnalisisOpcio();
        return opcio;

    }*/
    public void TopeParaules() throws IOException {
        while (ParaulesT > ParaulesMAX) {
            System.out.println("ERROR!!! Arxiu amb més de " + ParaulesMAX + " paraules!");
            Fitxer = AnalisisNomFitx();
            fitxIN = new FitxerIN(Fitxer);
            ParaulesT = fitxIN.ParaulesT();

        }

    }

    public Paraula AnalisisNomFitx() {
        String s = "";
        Fitxer = null;
        File fil = null;
        while (fil == null) {
            //System.out.print("* Introdueix el nom de l'arxiu: ");
            //Fitxer = new Paraula(tec.llegirLiniaA());
            s = finestra.agafar("");
            Fitxer = new Paraula(s.toCharArray());
            System.out.println(Fitxer);
            if (Fitxer != null) {
                fil = new File(Fitxer.toString());
                if (!fil.exists()) {
                    finestra.escriure("ERROR!!! Arxiu inexistent");
                    finestra.beep();
                    //System.out.println("* ERROR!!! Arxiu inexistent");
                    fil = null;
                }
            } else {
                finestra.escriure("ERROR!!! Arxiu inexistent");
                finestra.beep();
                //System.out.println("* ERROR!!! Arxiu inexistent");

            }

        }
        return Fitxer;
    }

    public Paraula AnalisisOpcio() throws IOException {

        opcio = new Paraula(finestra.agafar("").toCharArray());
        while (!opcio.iguals(posiblesOpcions[0]) && !opcio.iguals(posiblesOpcions[1]) && !opcio.iguals(posiblesOpcions[2]) && !opcio.iguals(posiblesOpcions[3]) && !opcio.iguals(posiblesOpcions[4]) && !opcio.iguals(posiblesOpcions[5]) && !opcio.iguals(posiblesOpcions[6]) && !opcio.iguals(posiblesOpcions[7]) && !opcio.iguals(posiblesOpcions[8]) && !opcio.iguals(posiblesOpcions[9])) {
            finestra.escriureln("Pareix que hi ha un error introduiex una opcio:  ");
            finestra.beep();
            opcio = new Paraula(finestra.agafar("").toCharArray());
        }
        fitxIN.resetA();

        return opcio;
    }

    public void Switch(Paraula op) throws IOException {

        if (op.iguals(posiblesOpcions[0])) {
            String res = null;
            while (res == null) {
                finestra.posarDibuix(0, 0, "imatges/lletramesrp.png", 1080, 720);
                LletraMesRepetida();
                res = finestra.agafar("Introdueix qualsevol caràcter per tornar");

                /*System.out.println("\n\n\n\n");
                System.out.println("****************************************************************************");
                System.out.println("              Lletra mes repetida               ");
                System.out.println("****************************************************************************");
                System.out.println("Nom fitxer: " + Fitxer.toString() + "\n");
                 */
            }
            fitxIN.resetA();
        }

        if (op.iguals(posiblesOpcions[1])) {
            String res = null;
            while (res == null) {
                finestra.posarDibuix(0, 0, "imatges/lletramesrp.png", 1080, 720);
                AparicionsCaracters();
                res = finestra.agafar("Introdueix qualsevol caràcter per tornar");
                fitxIN.resetA();
            }
        }

        if (op.iguals(posiblesOpcions[2])) {
            String res = null;
            while (res == null) {
                finestra.posarDibuix(0, 0, "imatges/paraulamesrp.png", 1080, 720);
                ParaulaMesRepetida();
                res = finestra.agafar("Introdueix qualsevol caràcter per tornar");
            }
        }
        if (op.iguals(posiblesOpcions[3])) {
            System.out.print("Introdueix la paraula a cercar: ");
            paraulaCerca = tec.llegirLiniaA();
            System.out.println("\n\n\n\n");
            CercarParaula();
            fitxIN.resetA();
        }
        if (op.iguals(posiblesOpcions[4])) {
            System.out.print("Introdueix el text a cercar: ");
            text = tec.llegirLiniaA();
            System.out.println("\n\n\n\n");
            CercarText();
            fitxIN.resetA();
        }
        if (op.iguals(posiblesOpcions[5])) {
            System.out.println("\n\n\n\n");
            ParaulesSeguides();
            fitxIN.resetA();
        }
        if (op.iguals(posiblesOpcions[6])) {
            System.out.println("\n\n\n\n");
            Codificar();

        }
        if (op.iguals(posiblesOpcions[7])) {
            System.out.println("\n\n\n\n");
            EstablirLLavor();
        }
        if (op.iguals(posiblesOpcions[8])) {
            TopeDePal();
            fitxIN.resetA();

        }
    }

    public void SwitchCod(Paraula op) throws IOException {

        if (op.iguals(posiblesOpcions[0])) {
            System.out.println("\n\n\n\n");
            System.out.println("****************************************************************************");
            System.out.println("              Lletra mes repetida               ");
            System.out.println("****************************************************************************");
            System.out.println("Nom fitxer: " + Fitxer.toString() + "\n");
            LletraMesRepetida();
            fitxIN.resetA();
        }

        if (op.iguals(posiblesOpcions[1])) {
            System.out.println("\n\n\n\n");
            AparicionsCaracters();
            fitxIN.resetA();
        }

        if (op.iguals(posiblesOpcions[2])) {
            System.out.println("\n\n\n\n");
            ParaulaMesRepetida();
        }
        if (op.iguals(posiblesOpcions[3])) {
            System.out.print("Introdueix la paraula a cercar: ");
            paraulaCerca = tec.llegirLiniaA();
            System.out.println("\n\n\n\n");
            CercarParaula();
            fitxIN.resetA();
        }
        if (op.iguals(posiblesOpcions[4])) {
            System.out.print("Introdueix el text a cercar: ");
            text = tec.llegirLiniaA();
            System.out.println("\n\n\n\n");
            CercarText();
            fitxIN.resetA();
        }
        if (op.iguals(posiblesOpcions[5])) {
            System.out.println("\n\n\n\n");
            ParaulesSeguides();
            fitxIN.resetA();
        }
        if (op.iguals(posiblesOpcions[6])) {
            System.out.println("\n\n\n\n");
            Codificar();

        }
        if (op.iguals(posiblesOpcions[7])) {
            System.out.println("\n\n\n\n");
            EstablirLLavor();
        }
        if (op.iguals(posiblesOpcions[8])) {
            TopeDePal();
            fitxIN.resetA();

        }
    }

    //Metodo que nos indica cual es la letra mas repetida del txt es el apartado 1 del menu principal
    public void LletraMesRepetida() throws FileNotFoundException, IOException {

        int nombreabc[] = fitxIN.nombreAparicionsC();
        int valor = fitxIN.MesRepetidaLl(nombreabc);
        char abc[] = abecedarioES();
        finestra.posarText(715, 328, abc[valor] + "", 4, 138, 122, 101);
        finestra.posarText(355, 383, nombreabc[valor] + " vegades", 3, 138, 122, 101);
        System.out.println("La lletra me repetida es la " + abc[valor] + " i surt un total de " + nombreabc[valor] + " vegades");

    }

    //Metodo que nos indica el nombre de apariciones de cada caracter es el apartado 2 del menu principal
    public void AparicionsCaracters() throws IOException {
        int nombreAparicions[] = fitxIN.nombreAparicionsC();
        char abcES[] = abecedarioES();
        for (int i = 0; i < 27; i++) {
            System.out.println("La lletra " + abcES[i] + " surt un total de " + nombreAparicions[i] + " vegades");
            System.out.println("");
        }
    }

    //Metodo que indica cual es la palabra mas repetida del txt es el apartado 3 del menu principal
    public void ParaulaMesRepetida() throws IOException {
        BibliotecaParaules biblio = new BibliotecaParaules();
        Paraula paraulanova = fitxIN.llegirP();
        while (!paraulanova.buida()) {
            biblio.Tractar(paraulanova);
            paraulanova = fitxIN.llegirP();
        }
        Paraula pal[] = biblio.getTrobades();
        int comptador[] = biblio.getAparicionsPal();
        int valor[] = fitxIN.MesRepetidaPal(comptador);
        for (int i = 0; i < valor.length; i++) {
            comptador[i]++;
        }
        for (int i = 0; i < valor.length; i++) {
            int x = 715;
            int y = 328;
            if (valor[i] != 999999999) {
                finestra.posarText(x, y, pal[valor[i]] + "", 4, 138, 122, 101);
                System.out.println("La paraula mes repetida es " + pal[valor[i]] + " i surt un total de " + comptador[valor[i]] + " vegades");
            }
            x = x + 200;
            y = y + 200;
        }
    }

    //Metodo que nos encuentra la palabra introducida es el apartado 4 del menu principal
    public void CercarParaula() throws IOException {
        fitxIN.setCol(0);
        fitxIN.setLin(1);
        Paraula paraula1 = new Paraula(paraulaCerca);
        Paraula paraula2 = fitxIN.llegirP();
        while (!paraula2.buida()) {
            if (paraula1.iguals(paraula2)) {
                System.out.println("Apareix a la columna " + fitxIN.colPal(paraula2) + " y a la linia " + fitxIN.getLin() + "\n");
            }
            paraula2 = fitxIN.llegirP();

        }
    }

    //Metodo que nos encuentra el texto introducido es el apartado 5 del menu principal
    public void CercarText() throws IOException {
        Text primertext = new Text(text);
        Text segontext = fitxIN.llegirT();
        segontext.setCol(1);
        segontext.setLin(1);
        Paraula primera = primertext.agafarParauladeText();
        Paraula segona = segontext.agafarParauladeText();
        while (!segona.buida()) {
            if (primera.iguals(segona)) {

                if (primertext.Tigual(segontext)) {
                    System.out.println("Text trobat a la linia " + segontext.lin + " i columna " + (segontext.col - segona.ind));
                }
            }
            segona = segontext.agafarParauladeText();
        }
    }

    //Metodo que nos encuentra 2 palabras iguales que van seguidases el apartado 6 del menu principal 
    public void ParaulesSeguides() throws IOException {
        fitxIN.setLin(1);
        fitxIN.setCol(0);
        Paraula primera = fitxIN.llegirP();
        Paraula segona = fitxIN.llegirP();
        while (!segona.buida()) {
            if (primera.iguals(segona)) {

                System.out.println("Trobada " + primera + " a la linia " + fitxIN.getLin() + " i columna " + col);
            }
            primera = segona;
            col = fitxIN.getCol() - primera.ind;
            segona = fitxIN.llegirP();
        }
    }

    //Metodo que nos codifica el archivo es el apartado 7 del menu principal
    public void Codificar() throws IOException {
        CodDes Cod = new CodDes();
        Cod.PrepararCodificacio(llavor);
        Cod.codificar(Fitxer);
    }

    //Metodo que nos permite modificar el valor de la semilla del random
    public void EstablirLLavor() throws IOException {
        CodDes Des = new CodDes();
        llavor = Des.Llavor();
    }

    //Establir tope de Paraules
    public void TopeDePal() throws IOException {
        System.out.print("Indica quin serà el nou tope de paraules: ");
        ParaulesMAX = tec.llegirSencer();
        Fitxer = AnalisisNomFitx();
        fitxIN = new FitxerIN(Fitxer);
        ParaulesT = fitxIN.ParaulesT();
        TopeParaules();
        do {
            Switch(AnalisisOpcio());
        } while (!opcio.iguals(posiblesOpcions[9]));
    }

    //Metodo que crea el abecedario español
    public char[] abecedarioES() {
        char abc[] = new char[27];
        int j = 97;
        for (int i = 0; i < 14; i++) {
            abc[i] = (char) j;
            j++;
        }
        abc[14] = 'ñ';
        for (int i = 15; i < 27; i++) {
            abc[i] = (char) j;
            j++;
        }
        return abc;
    }

    public void PosOPC() {
        posiblesOpcions = new Paraula[10];
        for (int i = 0; i < 10; i++) {
            posiblesOpcions[i] = new Paraula();
        }
        posiblesOpcions[0].afeigir('1');
        posiblesOpcions[1].afeigir('2');
        posiblesOpcions[2].afeigir('3');
        posiblesOpcions[3].afeigir('4');
        posiblesOpcions[4].afeigir('5');
        posiblesOpcions[5].afeigir('6');
        posiblesOpcions[6].afeigir('7');
        posiblesOpcions[7].afeigir('8');
        posiblesOpcions[8].afeigir('9');
        posiblesOpcions[9].afeigir('s');
    }

    public void COD() {
        cod = new Paraula();
        cod.afeigir('c');
        cod.afeigir('o');
        cod.afeigir('d');
        cod.afeigir('.');
        cod.afeigir('t');
        cod.afeigir('x');
        cod.afeigir('t');
    }

    public void decodFitx() throws IOException {
        CodDes Cod = new CodDes();
        Cod.PrepararCodificacio(llavor);
        Cod.descodificar(new Paraula("temp".toCharArray()));
    }

    public static void main(String[] args) throws IOException {
        (new PracticaProgGUI()).inicio();
    }

    @Override
    public void notificar(RatoliDMI r) {
        finestra.escriureln("Has picat la coordenada (" + r.getX() + "," + r.getY() + ")");
    }
}


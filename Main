/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practicaproggui;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import javafx.scene.paint.Color;
import profesoratprimer.FinestraDMI;
import profesoratprimer.FinestraDMIInterf;
import profesoratprimer.RatoliDMI;

/**
 *
 * @author pedro
 */
public class PracticaProgGUI implements FinestraDMIInterf {

    private FinestraDMI finestra;
    private char text[];
    private char paraulaCerca[];
    private Paraula Fitxer;
    private LT tec = new LT();
    private boolean codif;
    private FitxerIN fitxIN;
    private FitxerIN codifIN;
    private Paraula opcio = null;
    private Paraula posiblesOpcions[];
    private int ParaulesT;
    private int col = 1;
    private int llavor = 0;
    private int ParaulesMAX = 500;
    private Paraula cod;

    private void inicio() throws IOException {
       menu();
    }
 
    public void TopeParaules() throws IOException {
        while (ParaulesT > ParaulesMAX) {
            finestra.escriure("ERROR!!! Arxiu amb més de " + ParaulesMAX + " paraules!");
            Fitxer = AnalisisNomFitx();
            fitxIN = new FitxerIN(Fitxer);
            ParaulesT = fitxIN.ParaulesT();

        }

    }

    public Paraula AnalisisNomFitx() {
        String s = "";
        Fitxer = null;
        File fil = null;
        while (fil == null) {
            //System.out.print("* Introdueix el nom de l'arxiu: ");
            //Fitxer = new Paraula(tec.llegirLiniaA());
            s = finestra.agafar("");
            Fitxer = new Paraula(s.toCharArray());

            if (Fitxer != null) {
                fil = new File(Fitxer.toString());
                if (!fil.exists()) {
                    finestra.escriure("ERROR!!! Arxiu inexistent");
                    finestra.beep();
                    //System.out.println("* ERROR!!! Arxiu inexistent");
                    fil = null;
                }
            } else {
                finestra.escriure("ERROR!!! Arxiu inexistent");
                finestra.beep();
                //System.out.println("* ERROR!!! Arxiu inexistent");

            }

        }
        return Fitxer;
    }

    public Paraula AnalisisOpcio() throws IOException {

        opcio = new Paraula(finestra.agafar("").toCharArray());
        while (!opcio.iguals(posiblesOpcions[0]) && !opcio.iguals(posiblesOpcions[1]) && !opcio.iguals(posiblesOpcions[2]) && !opcio.iguals(posiblesOpcions[3]) && !opcio.iguals(posiblesOpcions[4]) && !opcio.iguals(posiblesOpcions[5]) && !opcio.iguals(posiblesOpcions[6]) && !opcio.iguals(posiblesOpcions[7]) && !opcio.iguals(posiblesOpcions[8]) && !opcio.iguals(posiblesOpcions[9])) {
            finestra.escriureln("Pareix que hi ha un error introduiex una opcio:  ");
            finestra.beep();
            opcio = new Paraula(finestra.agafar("").toCharArray());
        }
        fitxIN.resetA();

        return opcio;
    }

    public void Switch(Paraula op) throws IOException {

        if (op.iguals(posiblesOpcions[0])) {
            String res = null;
            while (res == null) {
                finestra.posarDibuix(0, 0, "imatges/lletramesrp.png", 1080, 720);
                LletraMesRepetida();
                res = finestra.agafar("Introdueix qualsevol caràcter per tornar");
            }
            fitxIN.resetA();
        }

        if (op.iguals(posiblesOpcions[1])) {
            String res = null;
            while (res == null) {
                finestra.posarDibuix(0, 0, "imatges/cartotals.png", 1080, 720);
                AparicionsCaracters();
                res = finestra.agafar("Introdueix qualsevol caràcter per tornar");

            }
            fitxIN.resetA();
        }

        if (op.iguals(posiblesOpcions[2])) {
            String res = null;
            while (res == null) {
                finestra.posarDibuix(0, 0, "imatges/paraulamesrp.png", 1080, 720);
                ParaulaMesRepetida();
                res = finestra.agafar("Introdueix qualsevol caràcter per tornar");
            }
            fitxIN.resetA();
        }
        if (op.iguals(posiblesOpcions[3])) {
            String res = null;
            while (res == null) {
                String s = "";
                s = finestra.agafar("Introdueix la paraula a cercar: ");
                paraulaCerca = s.toCharArray();
                finestra.posarDibuix(0, 0, "imatges/cercpal.png", 1080, 720);
                CercarParaula();
                res = finestra.agafar("Introdueix qualsevol caràcter per tornar");
            }
            fitxIN.resetA();
        }
        if (op.iguals(posiblesOpcions[4])) {
            String res = null;
            while (res == null) {
                String s = "";
                s = finestra.agafar("Introdueix el text a cercar: ");
                System.out.print("Introdueix el text a cercar: ");
                text = s.toCharArray();
                finestra.posarDibuix(0, 0, "imatges/cerctext.png", 1080, 720);
                CercarText();
                res = finestra.agafar("Introdueix qualsevol caràcter per tornar");
            }
            fitxIN.resetA();
        }
        if (op.iguals(posiblesOpcions[5])) {
            String res = null;
            while (res == null) {
                finestra.posarDibuix(0, 0, "imatges/palrep.png", 1080, 720);
                ParaulesSeguides();
                res = finestra.agafar("Introdueix qualsevol caràcter per tornar");
            }
            fitxIN.resetA();
        }
        if (op.iguals(posiblesOpcions[6])) {
            System.out.println("\n\n\n\n");
            Codificar();
            finestra.escriure("Codificat amb èxit");
        }
        if (op.iguals(posiblesOpcions[7])) {
            System.out.println("\n\n\n\n");
            EstablirLLavor();
            finestra.escriure("Llavor assignada");
        }
        if (op.iguals(posiblesOpcions[8])) {
            TopeDePal();
            fitxIN.resetA();

        }
    }

    public void SwitchCod(Paraula op) throws IOException {

        if (op.iguals(posiblesOpcions[0])) {
            String res = null;
            while (res == null) {
                finestra.posarDibuix(0, 0, "imatges/lletramesrp.png", 1080, 720);
                LletraMesRepetida();
                res = finestra.agafar("Introdueix qualsevol caràcter per tornar");
                codifIN.resetA();
            }
        }

        if (op.iguals(posiblesOpcions[1])) {
            String res = null;
            while (res == null) {
                finestra.posarDibuix(0, 0, "imatges/cartotals.png", 1080, 720);
                AparicionsCaracters();
                res = finestra.agafar("Introdueix qualsevol caràcter per tornar");
                codifIN.resetA();
            }
        }

        if (op.iguals(posiblesOpcions[2])) {
            String res = null;
            while (res == null) {
                finestra.posarDibuix(0, 0, "imatges/paraulamesrp.png", 1080, 720);
                ParaulaMesRepetida();
                res = finestra.agafar("Introdueix qualsevol caràcter per tornar");
            }
        }
        if (op.iguals(posiblesOpcions[3])) {
            String res = null;
            while (res == null) {
                String s = "";
                s = finestra.agafar("Introdueix la paraula a cercar: ");
                paraulaCerca = s.toCharArray();
                finestra.posarDibuix(0, 0, "imatges/cercpal.png", 1080, 720);
                CercarParaula();
                res = finestra.agafar("Introdueix qualsevol caràcter per tornar");
            }
            codifIN.resetA();
        }
        if (op.iguals(posiblesOpcions[4])) {
            String res = null;
            while (res == null) {
                String s = "";
                s = finestra.agafar("Introdueix el text a cercar: ");
                System.out.print("Introdueix el text a cercar: ");
                text = s.toCharArray();
                finestra.posarDibuix(0, 0, "imatges/cercpal.png", 1080, 720);
                CercarText();
                res = finestra.agafar("Introdueix qualsevol caràcter per tornar");
            }
            codifIN.resetA();
        }
        if (op.iguals(posiblesOpcions[5])) {
            String res = null;
            while (res == null) {
                finestra.posarDibuix(0, 0, "imatges/palrep.png", 1080, 720);
                ParaulesSeguides();
                res = finestra.agafar("Introdueix qualsevol caràcter per tornar");
            }
            codifIN.resetA();
        }
        if (op.iguals(posiblesOpcions[6])) {
            System.out.println("\n\n\n\n");
            Codificar();
            finestra.escriure("Codificat amb èxit");
        }
        if (op.iguals(posiblesOpcions[7])) {
            System.out.println("\n\n\n\n");
            EstablirLLavor();
            finestra.escriure("Llavor assignada");
        }
        if (op.iguals(posiblesOpcions[8])) {
            TopeDePal();
            codifIN.resetA();

        }
    }

    //Metodo que nos indica cual es la letra mas repetida del txt es el apartado 1 del menu principal
    public void LletraMesRepetida() throws FileNotFoundException, IOException {
        if (codif == false) {
            int nombreabc[] = fitxIN.nombreAparicionsC();
            int valor = fitxIN.MesRepetidaLl(nombreabc);
            char abc[] = abecedarioES();
            finestra.posarText(715, 325, abc[valor] + "", 2, 200, 180, 150);
            finestra.posarText(355, 379, nombreabc[valor] + " vegades", 2, 200, 180, 150);
        }
        if (codif == true) {
            int nombreabc[] = codifIN.nombreAparicionsC();
            int valor = codifIN.MesRepetidaLl(nombreabc);
            char abc[] = abecedarioES();
            finestra.posarText(715, 325, abc[valor] + "", 2, 200, 180, 150);
            finestra.posarText(355, 379, nombreabc[valor] + " vegades", 2, 200, 180, 150);
        }
    }

    //Metodo que nos indica el nombre de apariciones de cada caracter es el apartado 2 del menu principal
    public void AparicionsCaracters() throws IOException {
        if (codif == false) {
            int y = 168;
            int nombreAparicions[] = fitxIN.nombreAparicionsC();
            char abcES[] = abecedarioES();
            for (int i = 0; i < 27; i++) {
                finestra.posarText(350, y, "La lletra " + abcES[i] + " surt un total de " + nombreAparicions[i] + " vegades", 2, 200, 180, 150);
                y = y + 20;
            }
        }
        if (codif == true) {
            int y = 168;
            int nombreAparicions[] = codifIN.nombreAparicionsC();
            char abcES[] = abecedarioES();
            for (int i = 0; i < 27; i++) {
                finestra.posarText(350, y, "La lletra " + abcES[i] + " surt un total de " + nombreAparicions[i] + " vegades", 2, 200, 180, 150);
                y = y + 20;
            }
        }
    }

    //Metodo que indica cual es la palabra mas repetida del txt es el apartado 3 del menu principal
    public void ParaulaMesRepetida() throws IOException {
        if (codif == false) {
            BibliotecaParaules biblio = new BibliotecaParaules();
            Paraula paraulanova = fitxIN.llegirP();
            while (!paraulanova.buida()) {
                biblio.Tractar(paraulanova);
                paraulanova = fitxIN.llegirP();
            }
            Paraula pal[] = biblio.getTrobades();
            int comptador[] = biblio.getAparicionsPal();
            int valor[] = fitxIN.MesRepetidaPal(comptador);
            for (int i = 0; i < valor.length; i++) {
                comptador[i]++;
            }
            int x = 650;
            int y = 324;
            int x2 = 300;
            int y2 = 380;
            for (int i = 0; i < valor.length; i++) {

                if (valor[i] != 999999999) {
                    finestra.posarText(x, y, pal[valor[i]] + ", ", 3, 200, 180, 150);
                    finestra.posarText(x2, y2, comptador[valor[i]] + ", ", 3, 200, 180, 150);
                }
                x = x + 80;
                x2 = x2 + 35;

            }
        }
        if (codif == true) {
            BibliotecaParaules biblio = new BibliotecaParaules();
            Paraula paraulanova = codifIN.llegirP();
            while (!paraulanova.buida()) {
                biblio.Tractar(paraulanova);
                paraulanova = codifIN.llegirP();
            }
            Paraula pal[] = biblio.getTrobades();
            int comptador[] = biblio.getAparicionsPal();
            int valor[] = codifIN.MesRepetidaPal(comptador);
            for (int i = 0; i < valor.length; i++) {
                comptador[i]++;
            }
            int x = 650;
            int y = 324;
            int x2 = 300;
            int y2 = 380;
            for (int i = 0; i < valor.length; i++) {

                if (valor[i] != 999999999) {
                    finestra.posarText(x, y, pal[valor[i]] + ", ", 3, 200, 180, 150);
                    finestra.posarText(x2, y2, comptador[valor[i]] + ", ", 3, 200, 180, 150);
                }
                x = x + 80;
                x2 = x2 + 35;

            }

        }
    }

    //Metodo que nos encuentra la palabra introducida es el apartado 4 del menu principal
    public void CercarParaula() throws IOException {
        if (codif == false) {
            fitxIN.setCol(0);
            fitxIN.setLin(1);
            Paraula paraula1 = new Paraula(paraulaCerca);
            Paraula paraula2 = fitxIN.llegirP();
            int y = 125;
            while (!paraula2.buida()) {
                if (paraula1.iguals(paraula2)) {
                    finestra.posarText(350, y, "Apareix a la columna " + fitxIN.colPal(paraula2) + " y linia " + fitxIN.getLin(), 2, 200, 180, 150);
                    y = y + 30;
                }
                paraula2 = fitxIN.llegirP();

            }
        }
        if (codif == true) {
            codifIN.setCol(0);
            codifIN.setLin(1);
            Paraula paraula1 = new Paraula(paraulaCerca);
            Paraula paraula2 = codifIN.llegirP();
            int y = 125;
            while (!paraula2.buida()) {
                if (paraula1.iguals(paraula2)) {
                    finestra.posarText(350, y, "Apareix a la columna " + codifIN.colPal(paraula2) + " y linia " + codifIN.getLin(), 2, 200, 180, 150);
                    y = y + 30;
                }
                paraula2 = codifIN.llegirP();

            }
        }
    }

    //Metodo que nos encuentra el texto introducido es el apartado 5 del menu principal
    public void CercarText() throws IOException {
        if (codif == false) {
            Text primertext = new Text(text);
            Text segontext = fitxIN.llegirT();
            segontext.setCol(1);
            segontext.setLin(1);
            Paraula primera = primertext.agafarParauladeText();
            Paraula segona = segontext.agafarParauladeText();
            int y = 125;
            while (!segona.buida()) {
                if (primera.iguals(segona)) {

                    if (primertext.Tigual(segontext)) {
                        finestra.posarText(350, y, "Text trobat a la linia " + segontext.lin + " i columna " + (segontext.col - segona.ind), 2, 200, 180, 150);
                        y = y + 30;
                    }
                }
                segona = segontext.agafarParauladeText();

            }
        }
        if (codif == true) {
            Text primertext = new Text(text);
            Text segontext = codifIN.llegirT();
            segontext.setCol(1);
            segontext.setLin(1);
            Paraula primera = primertext.agafarParauladeText();
            Paraula segona = segontext.agafarParauladeText();
            int y = 125;
            while (!segona.buida()) {
                if (primera.iguals(segona)) {

                    if (primertext.Tigual(segontext)) {
                        finestra.posarText(350, y, "Text trobat a la linia " + segontext.lin + " i columna " + (segontext.col - segona.ind), 2, 200, 180, 150);
                        y = y + 30;
                    }
                }
                segona = segontext.agafarParauladeText();

            }

        }
    }

    public void menu() throws IOException {
        File fich;
        File f1 = new File("copiadecodificada.txt");
        finestra = FinestraDMI.crear(this, 1080, 720);
        finestra.posarDibuix(0, 0, "imatges/titulo.png", 1080, 720);
        Fitxer = AnalisisNomFitx();
        fitxIN = new FitxerIN(Fitxer);
        ParaulesT = fitxIN.ParaulesT();
        Paraula fitxerANT = new Paraula(Fitxer.toString().toCharArray());
        System.out.println(fitxerANT);
        PosOPC();
        COD();
        if (Fitxer.codificar(cod)) {
            System.out.println("Has introduit un fitxer codificat,");
            finestra.posarDibuix(0, 0, "imatges/llavor.png", 1080, 720);
            EstablirLLavor();
            decodFitx();
            codifIN = new FitxerIN(Fitxer);
            fich = new File(Fitxer.toString());
            System.out.println(Fitxer);
            codif = true;
            finestra.escriure("Si vols esborrar la copia de l'arxiu codificat pulsa s, si no vols pulsa la creu per sortir i guardar-lo.");
            do {
                fich.renameTo(f1);
                finestra.posarDibuix(0, 0, "imatges/pantalla2.png", 1080, 720);
                finestra.posarText(855, 476, fitxerANT.toString(), 1, 138, 122, 101);
                finestra.posarText(931, 453, ParaulesMAX + "", 1, 138, 122, 101);
                finestra.posarText(968, 498, fitxIN.CaractersT() + "", 1, 138, 122, 101);
                finestra.posarText(965, 522, fitxIN.ParaulesT() + "", 1, 138, 122, 101);
                finestra.posarText(945, 545, fitxIN.getLin() + "", 1, 138, 122, 101);
                finestra.posarText(866, 569, llavor + "", 1, 138, 122, 101);
                SwitchCod(AnalisisOpcio());
            } while (!opcio.iguals(posiblesOpcions[9]));
            codifIN.close();
            fitxIN.close();
            fich.delete();
            finestra.agafar("Esborrat, has de reiniciar el programa.");

        } else {
            codif = false;
            fich = new File(Fitxer.toString());
            do {
                finestra.posarDibuix(0, 0, "imatges/pantalla2.png", 1080, 720);
                finestra.posarText(855, 476, fitxerANT.toString(), 1, 138, 122, 101);
                finestra.posarText(931, 453, ParaulesMAX + "", 1, 138, 122, 101);
                finestra.posarText(968, 498, fitxIN.CaractersT() + "", 1, 138, 122, 101);
                finestra.posarText(965, 522, fitxIN.ParaulesT() + "", 1, 138, 122, 101);
                finestra.posarText(945, 545, fitxIN.getLin() + "", 1, 138, 122, 101);
                finestra.posarText(866, 569, llavor + "", 1, 138, 122, 101);
                Switch(AnalisisOpcio());

            } while (!opcio.iguals(posiblesOpcions[9]));
        }
    }

    //Metodo que nos encuentra 2 palabras iguales que van seguidas es el apartado 6 del menu principal 
    public void ParaulesSeguides() throws IOException {
        if (codif == false) {
            fitxIN.setLin(1);
            fitxIN.setCol(0);
            Paraula primera = fitxIN.llegirP();
            Paraula segona = fitxIN.llegirP();
            int y = 125;
            while (!segona.buida()) {
                if (primera.iguals(segona)) {
                    finestra.posarText(350, y, "Trobada " + primera + " a la linia " + fitxIN.getLin() + " i columna " + col, 2, 200, 180, 150);
                    y = y + 30;
                }
                primera = segona;
                col = fitxIN.getCol() - primera.ind;
                segona = fitxIN.llegirP();
            }
        }
        if (codif == true) {
            codifIN.setLin(1);
            codifIN.setCol(0);
            Paraula primera = codifIN.llegirP();
            Paraula segona = codifIN.llegirP();
            int y = 125;
            while (!segona.buida()) {
                if (primera.iguals(segona)) {
                    finestra.posarText(350, y, "Trobada " + primera + " a la linia " + codifIN.getLin() + " i columna " + col, 2, 200, 180, 150);
                    y = y + 30;
                }
                primera = segona;
                col = codifIN.getCol() - primera.ind;
                segona = codifIN.llegirP();
            }
        }
    }

    //Metodo que nos codifica el archivo es el apartado 7 del menu principal
    public void Codificar() throws IOException {
        CodDes Cod = new CodDes();
        Cod.PrepararCodificacio(llavor);
        Cod.codificar(Fitxer);
        decodFitx();    
        
    }

    //Metodo que nos permite modificar el valor de la semilla del random
    public void EstablirLLavor() throws IOException {
        llavor = Llavor();
    }

    public int Llavor() {

        LT tec = new LT();
        Integer semilla = -1;
        while (semilla <= -1) {
           
            semilla = Integer.parseInt(finestra.agafar("Introdueix la llavor entre 0 i 10000"));
            //System.out.print("  Introdueix el valor de la llavor  (nombre entre 0 i 10000): ");

            if ((semilla == null) || (semilla <= -1) || (semilla > 10000)) {
                finestra.escriure("ERROR!!!! Llavor incorrecta");
                //System.out.println("ERROR!!!! Llavor incorrecta");
                semilla = -1;
            }
        }
        return semilla;
    }

    //Establir tope de Paraules
    public void TopeDePal() throws IOException {
        if (codif == false) {
            String s = finestra.agafar("Indica quin serà el nou tope de paraules: ");
            ParaulesMAX = Integer.parseInt(s);
            finestra.posarDibuix(0, 0, "imatges/titulo.png", 1080, 720);
            Fitxer = AnalisisNomFitx();
            fitxIN = new FitxerIN(Fitxer);
            ParaulesT = fitxIN.ParaulesT();
            TopeParaules();
            
            
        }
        if (codif == true) {
            String s = finestra.agafar("Indica quin serà el nou tope de paraules: ");
            ParaulesMAX = Integer.parseInt(s);
            finestra.posarDibuix(0, 0, "imatges/titulo.png", 1080, 720);
            Fitxer = AnalisisNomFitx();
            codifIN = new FitxerIN(Fitxer);
            ParaulesT = codifIN.ParaulesT();
            TopeParaules();
            
        }
    }

    //Metodo que crea el abecedario español
    public char[] abecedarioES() {
        char abc[] = new char[27];
        int j = 97;
        for (int i = 0; i < 14; i++) {
            abc[i] = (char) j;
            j++;
        }
        abc[14] = 'ñ';
        for (int i = 15; i < 27; i++) {
            abc[i] = (char) j;
            j++;
        }
        return abc;
    }

    public void PosOPC() {
        posiblesOpcions = new Paraula[10];
        for (int i = 0; i < 10; i++) {
            posiblesOpcions[i] = new Paraula();
        }
        posiblesOpcions[0].afeigir('1');
        posiblesOpcions[1].afeigir('2');
        posiblesOpcions[2].afeigir('3');
        posiblesOpcions[3].afeigir('4');
        posiblesOpcions[4].afeigir('5');
        posiblesOpcions[5].afeigir('6');
        posiblesOpcions[6].afeigir('7');
        posiblesOpcions[7].afeigir('8');
        posiblesOpcions[8].afeigir('9');
        posiblesOpcions[9].afeigir('s');
    }

    public void COD() {
        cod = new Paraula();
        cod.afeigir('c');
        cod.afeigir('o');
        cod.afeigir('d');
        cod.afeigir('.');
        cod.afeigir('t');
        cod.afeigir('x');
        cod.afeigir('t');
    }

    public void decodFitx() throws IOException {
        CodDes Cod = new CodDes();
        Cod.PrepararCodificacio(llavor);
        Cod.descodificar(Fitxer);

    }

    public static void main(String[] args) throws IOException {
        (new PracticaProgGUI()).inicio();
    }

    @Override
    public void notificar(RatoliDMI r) {
        finestra.escriureln("Has picat la coordenada (" + r.getX() + "," + r.getY() + ")");
    }
}
